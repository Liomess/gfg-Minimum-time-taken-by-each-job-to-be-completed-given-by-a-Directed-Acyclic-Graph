from typing import List
from collections import deque
class Solution:
    def minimumTime(self, n : int,m : int, edges : List[List[int]]) -> int:
        adj=[[]for i in range(n+1)]
        for i in range(m):
            adj[edges[i][0]].append(edges[i][1])
        indegree=[0]*(n+1)
        for i in range(1,n+1):
            for val in adj[i]:
                indegree[val]+=1
        q=deque()
        ans=[0]*(n+1)
        for i in range(1,n+1):
            if indegree[i]==0:
                q.append(i)
                ans[i]=1
        while q:
            node=q.popleft()
            for val in adj[node]:
                indegree[val]-=1
                if indegree[val]==0:
                    q.append(val)
                    ans[val]=ans[node]+1
        ans=ans[1:]
        return ans
